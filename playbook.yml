---
# docker containers:
# x server
# x math
# x postgres
# x nginx-proxy
# x file-server
# x client-participation
# x client-admin
# x client-report

# docker volumes
# x postgres data

- name: polis deploy
  hosts: west
  remote_user: hank
  vars:
    user: hank
    branch: playbook
    homedir: "/home/{{ user }}"
    org: "ballPointPenguin" # change to pol-is
    workdir: "{{ homedir }}/code/src/github.com/{{ org }}/polisServer"

  tasks:
    - name: ensure workdir parent dir is present
      file:
        path: "{{ homedir }}/code/src/github.com/{{ org }}"
        state: directory

    - name: clone or update polisServer repository
      git:
        accept_hostkey: yes
        dest: "{{ workdir }}"
        key_file: "{{ homedir }}/.ssh/id_rsa"
        repo: "git@github.com:{{ org }}/polisServer.git"
        update: yes
        version: "{{ branch }}"

    - name: register the current git hash
      command: git rev-parse --short HEAD
      register: git_hash
      args:
        chdir: "{{ workdir }}"

    - name: copy .env file to remote folder
      copy:
        src: .env
        dest: "{{ workdir }}/.env"

    # DATABASE

    - name: ensure postgres data volume
      docker_container:
        image: postgres:9.5
        name: polis-db-data
        state: stopped

    - name: build polis postgres image
      docker_image:
        name: polisdemo/postgres
        source: build
        tag: demo
        build:
          dockerfile: Dockerfile-db
          path: "{{ workdir }}/server"

    - name: run polis postgres
      docker_container:
        image: polisdemo/postgres:demo
        name: polis-postgres
        restart_policy: always
        env_file: "{{ workdir }}/.env"
        volumes_from:
          - polis-db-data

    # BUILT ARTIFACTS DATA VOLUME

    # - name: build polis-client-build image
    #   docker_image:
    #     name: polisdemo/client-build
    #     source: build
    #     tag: demo
    #     build:
    #       dockerfile: build.Dockerfile
    #       path: "{{ workdir }}/file-server"

    - name: ensure polis-client-build data volume
      docker_container:
        name: polis-client-build
        image: busybox
        volumes:
          - /build
        # image: polisdemo/client-build:demo
        # name: polis-client-build
        # state: stopped

    # CLIENT COMPONENTS

    - name: build client-admin image
      docker_image:
        # force_source: yes
        name: polisdemo/client-admin
        source: build
        tag: demo
        build:
          path: "{{ workdir }}/client-admin"
          args:
            GIT_HASH: "{{ git_hash }}"

    - name: build client-participation image
      docker_image:
        # force_source: yes
        name: polisdemo/client-participation
        source: build
        tag: demo
        build:
          path: "{{ workdir }}/client-participation"
          args:
            GIT_HASH: "{{ git_hash }}"

    - name: build client-report image
      docker_image:
        # force_source: yes
        name: polisdemo/client-report
        source: build
        tag: demo
        build:
          path: "{{ workdir }}/client-report"
          args:
            GIT_HASH: "{{ git_hash }}"

    - name: copy build from client-admin container
      docker_container:
        command: cp -r build/. /build
        image: polisdemo/client-admin:demo
        name: polis-client-admin
        volumes_from:
          - polis-client-build

    - name: copy build from client-participation container
      docker_container:
        command: cp -r build/. /build
        image: polisdemo/client-participation:demo
        name: polis-client-participation
        volumes_from:
          - polis-client-build

    - name: copy build from run client-report container
      docker_container:
        command: cp -r build/. /build
        image: polisdemo/client-report:demo
        name: polis-client-report
        volumes_from:
          - polis-client-build

    # FILE SERVER
    # Depends On:
    # - polisdemo/client-admin
    # - polisdemo/client-participation
    # - polisdemo/client-report
    - name: build file-server image
      docker_image:
        force_source: yes
        name: polisdemo/file-server
        source: build
        tag: demo
        build:
          path: "{{ workdir }}/file-server"

    - name: run file-server
      docker_container:
        image: polisdemo/file-server:demo
        name: polis-file-server
        recreate: yes
        restart_policy: always
        mounts:
          - source: polis-client-build:/build
            target: /app/build

    # API SERVER
    # depends_on:
    # - postgres
    # - file-server
    - name: build polis api server image
      docker_image:
        force_source: yes
        name: polisdemo/server
        source: build
        tag: demo
        build:
          path: "{{ workdir }}/server"

    - name: run polis api server
      docker_container:
        env_file: "{{ workdir }}/.env"
        image: polisdemo/server:demo
        name: polis-server
        # recreate: yes
        restart_policy: always
        env:
          PORT: "5000"
          HSTS: "off"
          LETSENCRYPT_HOST: "polisdemo.tech"
          VIRTUAL_HOST: "polisdemo.tech"
          VIRTUAL_PORT: "5000"
        links:
          - "polis-file-server:file-server"
          - "polis-postgres:postgres"

    # MATH
    # depends_on:
    # - postgres
    - name: build polis math image
      docker_image:
        force_source: yes
        name: polisdemo/math
        source: build
        tag: demo
        build:
          path: "{{ workdir }}/math"

    - name: run polis math
      docker_container:
        env_file: "{{ workdir }}/.env"
        image: polisdemo/math:demo
        name: polis-math
        restart_policy: always
        env:
          SERVER_PORT: "3123"
        exposed_ports:
          - "3123"
        links:
          - "polis-postgres:postgres"

    # NGINX
    # depends_on:
    # - api server
    #- name: copy nginx.default.conf file to remote folder
      #copy:
        #src: file-server/nginx.default.conf
        #dest: "{{ workdir }}/file-server/"

    #- name: run nginx proxy
      #docker_container:
        #image: nginx
        #name: polis-nginx-proxy
        #recreate: yes
        #restart_policy: always
        #env:
          #HSTS: "off"
          #VIRTUAL_HOST: "polisdemo.tech,www.polisdemo.tech"
          #LETSENCRYPT_HOST: "polisdemo.tech,www.polisdemo.tech"
        #links:
          #- "polis-server:server"
        #volumes:
          #- "{{ workdir }}/file-server/nginx.default.conf:/etc/nginx/conf.d/default.conf"

